nstallation and code usage

Download this repository and unzip it somewhere. You must rename the unzipped folder Uno_vu_line.
Open the Arduino IDE then open Uno_vu_line.ino
You will need the FastLED and JC_Button libraries installed. In the IDE, go to Tools -> Manage Libraries. Search for FastLED and install the latest version and do the same with JC_Button.
On the Uno_vu_line.ino tab, find the line that says # define N_PIXELS and change the number after it to the number of LEDs you have in each string.
Plug in the Arduino and upload the code in the usual way, ensuring that the correct board type and com port are selected in the Tools menu.

Extra info

The more LEDs you have, the more power you will need to provide. Make sure your power source is able to cope.
If you need to use longer strips and you are running out of RAM, you can reduce SAMPLES to something less than 60. The lower the number is, the the more flickery the VU will be, but you will be able to use more LEDs
If the controller seems to go weird, I've found a quick reflash of the code usually clears it up quickly.
This project is for entertainment purposes only and the output is not calibrated in any way.
Code is written to run on the Nano / Uno or equivalent. Using an AVR with more SRAM will result in being able to use more LEDs.
Code is based on demos from the FastLED library and code from Cinelights YouTube channel.